name: Docker Build Action
description: A composite action to build and push Docker images with multi-platform support

inputs:
  platforms:
    description: "Platforms to build for (e.g. linux/amd64,linux/arm64)"
    required: false
    default: "linux/amd64,linux/arm64"
  dockerfile:
    description: "Path to the Dockerfile"
    required: false
    default: "Dockerfile"
  context:
    description: "Build context"
    required: false
    default: "."
  push_enabled:
    description: "Whether to push the image to registry"
    required: false
    default: "true"
  registry:
    description: "Container registry to push to"
    required: false
    default: "ghcr.io"
  registry_username:
    description: "Registry username"
    required: false
  registry_password:
    description: "Registry password"
    required: false

outputs:
  image_name:
    description: "The full name of the Docker image"
    value: ${{ steps.outputs.outputs.image_name }}
  tags:
    description: "The tags applied to the Docker image"
    value: ${{ steps.outputs.outputs.tags }}

runs:
  using: "composite"
  steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Extract short SHA
      shell: bash
      id: vars
      run: echo "sha_short=$(git rev-parse --short=7 ${{ github.sha }})" >> "$GITHUB_OUTPUT"

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Registry
      if: inputs.push_enabled == 'true'
      uses: docker/login-action@v3
      with:
        registry: ${{ inputs.registry }}
        username: ${{ inputs.registry_username || github.actor }}
        password: ${{ inputs.registry_password || github.token }}

    - name: Extract metadata for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ inputs.registry }}/${{ github.repository }}
        tags: |
          type=raw,value=sha-${{ steps.vars.outputs.sha_short }}
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=raw,value=latest,enable={{is_default_branch}}
          type=raw,value=dev,enable=${{ github.ref == 'refs/heads/develop' }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ${{ inputs.context }}
        file: ${{ inputs.dockerfile }}
        platforms: ${{ inputs.platforms }}
        push: ${{ inputs.push_enabled == 'true' && github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Set outputs
      shell: bash
      run: |
        echo "image_name<<EOF" >> "$GITHUB_OUTPUT"
        echo "${{ inputs.registry }}/${{ github.repository }}"
        echo "EOF" >> "$GITHUB_OUTPUT"
        echo "tags<<EOF" >> "$GITHUB_OUTPUT"
        echo "${{ steps.meta.outputs.tags }}"
        echo "EOF" >> "$GITHUB_OUTPUT"
      id: outputs

    - name: Print image details
      if: ${{ inputs.push_enabled == 'true' && github.event_name != 'pull_request' }}
      shell: bash
      run: |
        echo "Published tags:"
        echo "${{ steps.meta.outputs.tags }}" | tr ' ' '\n'
        echo -e "\nPlatforms:"
        echo "${{ inputs.platforms }}" | tr ',' '\n' | sed 's/^/- /'
